{"version":3,"sources":["context/ThemeContext.js","hooks/useTheme.js","assets/logo.svg","components/searchbar/Searchbar.js","components/navbar/Navbar.js","assets/switch.svg","components/themeselector/ThemeSelector.js","firebase/config.js","components/medicationlist/MedicationList.js","pages/home/Home.js","pages/search/Search.js","pages/create/Create.js","pages/medication/Medication.js","pages/edit/Edit.js","App.js","index.js"],"names":["ThemeContext","createContext","themeReducer","state","action","type","_objectSpread","color","payload","mode","ThemeProvider","_ref","children","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","_jsx","Provider","value","changeColor","changeMode","useTheme","context","useContext","undefined","Error","Searchbar","_useState","useState","_useState2","term","setTerm","history","useHistory","className","_jsxs","onSubmit","e","preventDefault","push","concat","htmlFor","id","onChange","target","autoComplete","Navbar","style","background","Link","to","src","storeLogo","alt","themeColors","ThemeSelector","_useTheme","map","onClick","modeSwitch","filter","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectFirestore","firestore","MedicationList","medications","length","medication","textDecoration","name","dosage","dosageForm","instructions","substring","Home","data","setData","_useState3","_useState4","isPending","setIsPending","_useState5","_useState6","error","setError","useEffect","collection","get","then","snapshot","empty","results","docs","forEach","doc","catch","err","message","Search","queryString","useLocation","search","query","URLSearchParams","where","Create","setName","setDosage","setDosageForm","_useState7","_useState8","frequency","setFrequency","_useState9","_useState10","adminRoute","setAdminRoute","_useState11","_useState12","startDate","setStartDate","_useState13","_useState14","endDate","setEndDate","_useState15","_useState16","doctorName","setDoctorName","_useState17","_useState18","doctorEmail","setDoctorEmail","_useState19","_useState20","pharmacyName","setPharmacyName","_useState21","_useState22","pharmacyEmail","setPharmacyEmail","_useState23","_useState24","setInstructions","_useState25","_useState26","storage","setStorage","_useState27","_useState28","sideEffects","setSideEffects","_useState29","_useState30","warning","setWarning","_useState31","_useState32","newIngredient","setNewIngredient","_useState33","_useState34","contains","setContains","ingredientInput","useRef","_useState35","_useState36","_useState37","_useState38","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","add","t0","stop","_x","apply","arguments","required","ref","ing","trim","includes","prevIngredients","_toConsumableArray","current","focus","ingredient","Medication","setMedication","useParams","handleDelete","delete","console","log","exists","setTimeout","position","top","_Fragment","Edit","_useState39","_useState40","update","index","App","HashRouter","Switch","Route","exact","path","Redirect","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81088ae7.chunk.js","sourcesContent":["import { createContext, useReducer } from 'react'\r\nconst ThemeContext = createContext() \r\n\r\n// reducer function\r\nconst themeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_COLOR':\r\n      return { ...state, color: action.payload };\r\n    case 'CHANGE_MODE':\r\n      return { ...state, mode: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst ThemeProvider = ({ children }) => {\r\nconst [state, dispatch] = useReducer(themeReducer, {\r\n    color: \"#232524\",\r\n    mode: \"light\"\r\n})\r\n\r\n// custom changeColor function\r\nconst changeColor = (color) => {\r\n    dispatch({ type: 'CHANGE_COLOR', payload: color })\r\n}\r\n\r\n// custom changeMode function\r\nconst changeMode = (mode) => {\r\n    dispatch({ type: 'CHANGE_MODE', payload: mode })\r\n}\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ ...state, changeColor, changeMode }} >\r\n          { children }\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nexport {ThemeProvider, ThemeContext}","import { useContext } from 'react'\r\nimport { ThemeContext } from '../context/ThemeContext'\r\n \r\nconst useTheme = () => {\r\n    const context = useContext(ThemeContext)\r\n    if (context === undefined) {\r\n        throw new Error(\"useTheme must be used inside the ThemeProvider component\")\r\n    }\r\n\r\n    return context\r\n}\r\n\r\nexport { useTheme }","export default __webpack_public_path__ + \"static/media/logo.5bc32b6b.svg\";","import { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n// styles\r\nimport './Searchbar.css'\r\n\r\nconst Searchbar = () => {\r\n  \r\n  const [term, setTerm] = useState('')\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    history.push(`/search?q=${term}`)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"searchbar\">\r\n        <form onSubmit={handleSubmit}>\r\n           <label htmlFor=\"search\">Search</label>\r\n           <input type=\"text\" id=\"search\" onChange={(e) => setTerm(e.target.value)} autoComplete=\"off\" />\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Searchbar\r\n","import { Link } from 'react-router-dom'\r\nimport storeLogo from '../../assets/logo.svg'\r\nimport Searchbar from '../searchbar/Searchbar'\r\nimport { useTheme } from '../../hooks/useTheme'\r\n\r\n// styles\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\nconst { color } = useTheme()\r\n\r\n  return (\r\n    <div className=\"navbar\" style={{ background: color }} >\r\n        <nav>\r\n          <Link to=\"/\" className=\"storename\">\r\n            <h1>MediStore</h1>\r\n            <img src={storeLogo} alt=\"medication\" />\r\n            </Link>\r\n            <div className=\"search-add\">\r\n              <Searchbar />\r\n              <Link to=\"/create\">Add Medication</Link>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","export default __webpack_public_path__ + \"static/media/switch.9bbcff9c.svg\";","import { useTheme } from '../../hooks/useTheme'\r\nimport modeSwitch from '../../assets/switch.svg'\r\n\r\n// styles\r\nimport './ThemeSelector.css'\r\n\r\nconst themeColors = [\"#848D74\", \"#3E464E\", \"#2E8B57\"]\r\n\r\nconst ThemeSelector = () => {\r\n  const { changeColor, mode, changeMode } = useTheme()\r\n\r\n  const handleToggleMode = () => {\r\n    changeMode(mode === \"light\" ? \"dark\" : \"light\")\r\n }\r\n  return (\r\n    <div className=\"theme-selector\">\r\n       <div className=\"theme-buttons\">\r\n           {themeColors.map((color) => (\r\n               <div\r\n                  key={color}\r\n                  onClick={() => changeColor(color)}\r\n                  style={{background: color}}\r\n               />\r\n           ))}\r\n       </div>\r\n       <div className=\"mode-toggle\">\r\n          <img \r\n           src={modeSwitch} \r\n           alt=\"dark/light icon\"\r\n           onClick={handleToggleMode}\r\n           style={{ filter: mode === \"dark\" ? \"invert(100%)\" : \"invert(40%)\" }}\r\n           />\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ThemeSelector","// firebase core\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDAtiJiCzzCRvl7-DbJqDoeNLv2o3aK8t0\",\r\n    authDomain: \"medi-store-eef3b.firebaseapp.com\",\r\n    projectId: \"medi-store-eef3b\",\r\n    storageBucket: \"medi-store-eef3b.appspot.com\",\r\n    messagingSenderId: \"102430235092\",\r\n    appId: \"1:102430235092:web:1b6991d34b84a154011e41\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig)\r\n  const projectFirestore = firebase.firestore()\r\n\r\n  export { projectFirestore }\r\n","import { Link } from 'react-router-dom'\r\nimport { useTheme } from '../../hooks/useTheme'\r\n\r\n// styles\r\nimport './MedicationList.css'\r\n\r\nconst MedicationList = ({ medications }) => {\r\n  const { mode } = useTheme()\r\n\r\n  if (medications.length === 0) {\r\n    return <p className={`error ${mode}`}>Click \"Add Medication\" to start adding your medications</p>\r\n  }\r\n\r\n  return (\r\n    <div className=\"medication-list\">\r\n       {medications.map((medication) => (\r\n           <Link to={`/medications/${medication.id}`}\r\n           className={`card ${mode}`} \r\n           style={{textDecoration: \"none\"}} \r\n           key={medication.id} >\r\n              <h3>{medication.name}</h3>\r\n              <p>Dosage: <span>{medication.dosage}</span></p>\r\n              <p>Type: <span>{medication.dosageForm}</span></p>\r\n              <p>Instructions: <span>{medication.instructions.substring(0, 50)}...</span></p>\r\n            </Link>\r\n       ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MedicationList","import { useTheme } from '../../hooks/useTheme'\r\nimport { useEffect, useState } from 'react'\r\nimport { projectFirestore } from '../../firebase/config'\r\n\r\n// styles\r\nimport './Home.css'\r\n\r\n// components\r\nimport MedicationList from '../../components/medicationlist/MedicationList'\r\n\r\nconst Home = () => {\r\n  const { mode } = useTheme()\r\n  const [data, setData] = useState(null)\r\n  const [isPending, setIsPending] = useState(false)\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setIsPending(true)\r\n    projectFirestore.collection(\"medications\").get().then((snapshot) => {\r\n      if (snapshot.empty) {\r\n        setError(\"No medications to load...\")\r\n        setIsPending(false)\r\n      } else {\r\n        let results = []\r\n        snapshot.docs.forEach((doc) => {\r\n          results.push({ id: doc.id, ...doc.data() })\r\n        })\r\n        setData(results)\r\n        setIsPending(false)\r\n      }\r\n    }).catch((err) => {\r\n         setError(err.message)\r\n         setIsPending(false)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"home\">\r\n       <h1 className={`page-title ${mode}`}>Your Medications</h1>\r\n       {error && <p className={`error ${mode}`}>{error}</p>}\r\n       {isPending && <p className={`loading ${mode}`}>please wait...</p>}\r\n       {data && <MedicationList medications={data} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { useLocation } from 'react-router-dom'\r\nimport MedicationList from '../../components/medicationlist/MedicationList'\r\nimport { useTheme } from '../../hooks/useTheme'\r\nimport { projectFirestore } from '../../firebase/config'\r\nimport { useState, useEffect } from 'react'\r\n\r\n// styles\r\nimport './Search.css'\r\n\r\nconst Search = () => {\r\n  const queryString = useLocation().search\r\n  const queryParams = new URLSearchParams(queryString)\r\n  \r\n  const query = queryParams.get('q')  \r\n  const { mode } = useTheme()\r\n\r\n  const [data, setData] = useState(null)\r\n  const [isPending, setIsPending] = useState(false)\r\n  const [error, setError] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    setIsPending(true)\r\n    projectFirestore.collection(\"medications\").where('name', '==', query).get().then((snapshot) => {\r\n      if (snapshot.empty) {\r\n        setError(\"No medications to load...\")\r\n        setIsPending(false)\r\n      } else {\r\n        let results = []\r\n        snapshot.docs.forEach((doc) => {\r\n          results.push({ id: doc.id, ...doc.data() })\r\n        })\r\n        setData(results)\r\n        setError(false)\r\n        setIsPending(false)\r\n      }\r\n    })\r\n  }, [query])\r\n\r\n  return (\r\n    <div className=\"search\">\r\n       <h2 className={`page-title ${mode}`}>Medications including \"{query}\"</h2>\r\n       {error && <p className={`error ${mode}`}>{error}</p>}\r\n       {isPending && <p className={`loading ${mode}`}>please wait...</p>}\r\n       {data && <MedicationList medications={data} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search","// styles\r\nimport { useState, useRef } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useTheme } from '../../hooks/useTheme';\r\nimport { projectFirestore } from '../../firebase/config';\r\n\r\nimport './Create.css';\r\n\r\nconst Create = () => {\r\n  const [name, setName] = useState('');\r\n  const [dosage, setDosage] = useState('');\r\n  const [dosageForm, setDosageForm] = useState('');\r\n  const [frequency, setFrequency] = useState('');\r\n  const [adminRoute, setAdminRoute] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [doctorName, setDoctorName] = useState('');\r\n  const [doctorEmail, setDoctorEmail] = useState('');\r\n  const [pharmacyName, setPharmacyName] = useState('');\r\n  const [pharmacyEmail, setPharmacyEmail] = useState('');\r\n  const [instructions, setInstructions] = useState('');\r\n  const [storage, setStorage] = useState('');\r\n  const [sideEffects, setSideEffects] = useState('');\r\n  const [warning, setWarning] = useState('');\r\n\r\n  const [newIngredient, setNewIngredient] = useState('');\r\n  const [contains, setContains] = useState([]);\r\n  const ingredientInput = useRef(null);\r\n  const history = useHistory()\r\n  const { mode } = useTheme()\r\n\r\n  const [isPending, setIsPending] = useState(false)\r\n  const [error, setError] = useState(false)\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const doc = {      \r\n      name,\r\n      dosage,\r\n      dosageForm,\r\n      frequency,\r\n      adminRoute,\r\n      startDate,\r\n      endDate,\r\n      doctorName,\r\n      doctorEmail,\r\n      pharmacyName,\r\n      pharmacyEmail,\r\n      contains,\r\n      instructions,\r\n      storage,\r\n      sideEffects,\r\n      warning\r\n    }\r\n\r\n    try {\r\n      setIsPending(true)\r\n      await projectFirestore.collection(\"medications\").add(doc)\r\n      history.push(\"/\")\r\n    } catch(err) {\r\n        setIsPending(false)\r\n        setError(\"Sorry 😞 We can't add your medication right now...\")\r\n    }\r\n  };\r\n\r\n  const handleAdd = (e) => {\r\n    e.preventDefault();\r\n    const ing = newIngredient.trim();\r\n\r\n    if (ing && !contains.includes(ing)) {\r\n      setContains((prevIngredients) => [...prevIngredients, ing]);\r\n    }\r\n    setNewIngredient('');\r\n    ingredientInput.current.focus();\r\n  };\r\n\r\n  return (\r\n    <form className={`medication-form ${mode}`} onSubmit={handleSubmit}>\r\n      <h1 className={`page-title ${mode}`}>Add a new Medication</h1>\r\n      {isPending && <p className={`loading ${mode}`}>please wait...</p>}\r\n      {error && <p className={`error ${mode}`}>{error}</p>}\r\n      <div className='form-control'>\r\n        <label>\r\n          <span>Name:</span>\r\n          <input\r\n            type='text'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Dosage:</span>\r\n          <input\r\n            type='text'\r\n            value={dosage}\r\n            onChange={(e) => setDosage(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Type:</span>\r\n          <input\r\n            type='text'\r\n            value={dosageForm}\r\n            onChange={(e) => setDosageForm(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Frequency:</span>\r\n          <input\r\n            type='text'\r\n            value={frequency}\r\n            onChange={(e) => setFrequency(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Admin Route:</span>\r\n          <input\r\n            type='text'\r\n            value={adminRoute}\r\n            onChange={(e) => setAdminRoute(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Start:</span>\r\n          <input\r\n            type='date'\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>End:</span>\r\n          <input\r\n            type='date'\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Doctor Name:</span>\r\n          <input\r\n            type='text'\r\n            value={doctorName}\r\n            onChange={(e) => setDoctorName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Email:</span>\r\n          <input\r\n            type='email'\r\n            value={doctorEmail}\r\n            onChange={(e) => setDoctorEmail(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Pharmacy Name:</span>\r\n          <input\r\n            type='text'\r\n            value={pharmacyName}\r\n            onChange={(e) => setPharmacyName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Email:</span>\r\n          <input\r\n            type='email'\r\n            value={pharmacyEmail}\r\n            onChange={(e) => setPharmacyEmail(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Ingredients:</span>\r\n          <div className='ingredients'>\r\n            <input\r\n              type='text'\r\n              value={newIngredient}\r\n              ref={ingredientInput}\r\n              onChange={(e) => setNewIngredient(e.target.value)}\r\n            />\r\n            <button onClick={handleAdd} className='form-btn'>\r\n              Add\r\n            </button>\r\n          </div>\r\n        </label>\r\n\r\n        <p>\r\n          Current ingredients:{' '}\r\n          {contains.map((ingredient) => (\r\n            <em key={ingredient}>{ingredient}, </em>\r\n          ))}\r\n        </p>\r\n        <label>\r\n          <span>Instructions:</span>\r\n          <input\r\n            type='text'\r\n            value={instructions}\r\n            onChange={(e) => setInstructions(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Storage:</span>\r\n          <input\r\n            type='text'\r\n            value={storage}\r\n            onChange={(e) => setStorage(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Side Effects:</span>\r\n          <input\r\n            type='text'\r\n            value={sideEffects}\r\n            onChange={(e) => setSideEffects(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Advice:</span>\r\n          <input\r\n            type='text'\r\n            value={warning}\r\n            onChange={(e) => setWarning(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <button className='form-btn'>Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import { useParams, useHistory, Link } from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport { useTheme } from '../../hooks/useTheme'\r\nimport { projectFirestore } from '../../firebase/config'\r\n\r\n// styles\r\nimport './Medication.css'\r\n\r\nconst Medication = () => {\r\nconst [medication, setMedication] = useState(null)\r\nconst [isPending, setIsPending] = useState(false)\r\nconst [error, setError] = useState(false)\r\nconst { id } = useParams()\r\nconst history = useHistory()\r\nconst { mode } = useTheme()\r\n\r\n// delete medication\r\nconst handleDelete = async (id) => {\r\n  try {\r\n    await projectFirestore.collection(\"medications\").doc(id).delete()\r\n    history.push('/')\r\n  } catch (err) {\r\n      console.log(err.message)\r\n  }\r\n}\r\n\r\nuseEffect(() => {\r\n  setIsPending(true)\r\n  projectFirestore.collection(\"medications\").doc(id).get().then((doc) => {\r\n    if (doc.exists) {\r\n      setIsPending(false)\r\n      setMedication(doc.data())\r\n    } else {\r\n      setIsPending(false)\r\n      setError(\"Sorry! That medication doesn't exist...\")\r\n    }\r\n})\r\n}, [id])\r\n\r\nuseEffect(() => {\r\n  if (error) {\r\n    setTimeout(() => {\r\n      history.push('/')\r\n    }, 2000)\r\n  }\r\n}, [error, history])\r\n\r\n  return (\r\n    <div className={`medication ${mode}`}>\r\n        {isPending && <p className={`loading ${mode}`}>please wait...</p>}\r\n        {error && <p style={{position: \"relative\", top: \"1rem\"}} className={`error ${mode}`}>{error}</p>}\r\n        {medication && (\r\n        <>\r\n        <h2 className={`page-title ${mode}`}>{medication.name}</h2>\r\n  \r\n        <div className=\"info\">\r\n            <div className=\"dates\">\r\n              <p>Start Date: <span>{medication.startDate}</span></p>\r\n              <p>End Date: <span>{medication.endDate}</span></p>\r\n            </div>\r\n\r\n            <section>\r\n              <p>Dosage: <span>{medication.dosage}</span></p>\r\n              <p>Type: <span>{medication.dosageForm}</span></p>\r\n              <p>To be taken: <span>{medication.frequency}</span></p>\r\n              <p>Administration: <span>{medication.adminRoute}</span></p>\r\n            </section>\r\n\r\n            <div className=\"instructions\">\r\n              <p>Instructions: <span>{medication.instructions}</span></p>\r\n            </div>\r\n\r\n            <section>\r\n              <p>Prescribing Dr: <span>{medication.doctorName}</span></p>\r\n              <p>Email: <span>{medication.doctorEmail}</span></p>\r\n              <p>Pharmacy: <span>{medication.pharmacyName}</span></p> \r\n              <p>Email: <span>{medication.pharmacyEmail}</span></p>\r\n            </section>\r\n\r\n            <section>\r\n              <p>Contains: {medication.contains.map((ingredient) =>(\r\n                    <span key={ingredient}>\r\n                        {ingredient}\r\n                    </span>\r\n                ))}\r\n                </p> \r\n              <p>Side Effects: <span>{medication.sideEffects}</span></p>\r\n              <p>Advice: <span>{medication.warning}</span></p>\r\n            </section>\r\n          </div>\r\n          <div className=\"buttons\">\r\n              <Link className=\"editBtn\" to={`/edit/${id}`} >Edit</Link>\r\n              <button className=\"delete\" onClick={() => handleDelete(id)} >Delete</button> \r\n          </div>\r\n        </>\r\n       )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Medication","import { useRef, useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useTheme } from '../../hooks/useTheme';\r\nimport { projectFirestore } from '../../firebase/config';\r\n\r\n// styles\r\nimport './Edit.css'\r\n\r\nconst Edit = () => {\r\n    const [name, setName] = useState('');\r\n    const [dosage, setDosage] = useState('');\r\n    const [dosageForm, setDosageForm] = useState('');\r\n    const [frequency, setFrequency] = useState('');\r\n    const [adminRoute, setAdminRoute] = useState('');\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [doctorName, setDoctorName] = useState('');\r\n    const [doctorEmail, setDoctorEmail] = useState('');\r\n    const [pharmacyName, setPharmacyName] = useState('');\r\n    const [pharmacyEmail, setPharmacyEmail] = useState('');\r\n    const [instructions, setInstructions] = useState('');\r\n    const [storage, setStorage] = useState('');\r\n    const [sideEffects, setSideEffects] = useState('');\r\n    const [warning, setWarning] = useState('');\r\n  \r\n    const [newIngredient, setNewIngredient] = useState('');\r\n    const [contains, setContains] = useState([]);\r\n    const ingredientInput = useRef(null);\r\n    const { id } = useParams()\r\n    const history = useHistory()\r\n\r\n    const { mode } = useTheme()\r\n\r\n    // created state for data\r\n    const [data, setData] = useState(null)\r\n    const [isPending, setIsPending] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n    useEffect(() => {\r\n      setIsPending(true)\r\n      projectFirestore.collection(\"medications\").doc(id).get().then((doc) => {\r\n        if (doc.exists) {\r\n           setData(doc.data())\r\n           setIsPending(false)\r\n        } else {\r\n          setError(\"Sorry! That medication doesn't exist...\")\r\n        }\r\n      })\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n      if (data) {\r\n        setName(data.name);\r\n        setDosage(data.dosage);\r\n        setDosageForm(data.dosageForm);\r\n        setFrequency(data.frequency);\r\n        setAdminRoute(data.adminRoute);\r\n        setStartDate(data.startDate);\r\n        setEndDate(data.endDate);\r\n        setDoctorName(data.doctorName);\r\n        setDoctorEmail(data.doctorEmail);\r\n        setPharmacyName(data.pharmacyName);\r\n        setPharmacyEmail(data.pharmacyEmail);\r\n        setNewIngredient(data.contains);\r\n        setContains(data.contains);\r\n        setInstructions(data.instructions);\r\n        setStorage(data.storage);\r\n        setSideEffects(data.sideEffects);\r\n        setWarning(data.warning);\r\n      }\r\n    }, [data]);\r\n\r\n    // form submit function\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault()\r\n\r\n      try {\r\n        await projectFirestore.collection(\"medications\").doc(id).update({\r\n          name : name,\r\n          dosage : dosage,\r\n          dosageForm: dosageForm,\r\n          frequency: frequency,\r\n          adminRoute: adminRoute,\r\n          startDate: startDate,\r\n          endDate: endDate,\r\n          doctorName: doctorName,\r\n          doctorEmail: doctorEmail,\r\n          pharmacyName: pharmacyName,\r\n          pharmacyEmail: pharmacyEmail,\r\n          contains: contains,\r\n          instructions: instructions,\r\n          storage: storage,\r\n          sideEffects: sideEffects,\r\n          warning: warning\r\n        })\r\n        history.push(\"/\")\r\n      } catch (error) {\r\n          setError(\"we can't update your medication right now...\")\r\n      }\r\n\r\n    }\r\n\r\n    // add ingredients function\r\n    const handleAdd = (e) => {\r\n      e.preventDefault();\r\n\r\n        if (typeof newIngredient === 'string') {\r\n          const ing = newIngredient.trim()\r\n\r\n          if (ing && !contains.includes(ing)) {\r\n            setContains((prevIngredients) => [...prevIngredients, ing]);\r\n          }\r\n          setNewIngredient('');\r\n          ingredientInput.current.focus();\r\n        } else {\r\n          return -1\r\n        }\r\n    };\r\n\r\n    // remove ingredients function\r\n    const handleRemove = (e) => {\r\n      e.preventDefault()\r\n      setContains(contains.filter((ingredient, index) => {\r\n        return index !== contains.length -1;\r\n      }))\r\n    }\r\n\r\n    return (\r\n      <form className={`edit-form ${mode}`} onSubmit={handleSubmit}>\r\n        <h1 className={`page-title ${mode}`}>Edit Medication</h1>\r\n        {error && <p className={`error ${mode}`}>{error}</p>}\r\n        {isPending && <p className={`loading ${mode}`}>please wait...</p>}\r\n        <div className='form-control'>\r\n          <label>\r\n            <span>Name:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Dosage:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={dosage}\r\n              onChange={(e) => setDosage(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Type:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={dosageForm}\r\n              onChange={(e) => setDosageForm(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Frequency:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={frequency}\r\n              onChange={(e) => setFrequency(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Admin Route:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={adminRoute}\r\n              onChange={(e) => setAdminRoute(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Start:</span>\r\n            <input\r\n              type=\"date\"\r\n              value={startDate}\r\n              onChange={(e) => setStartDate(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>End:</span>\r\n            <input\r\n              type=\"date\"\r\n              value={endDate}\r\n              onChange={(e) => setEndDate(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Doctor Name:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={doctorName}\r\n              onChange={(e) => setDoctorName(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Email:</span>\r\n            <input\r\n              type=\"email\"\r\n              value={doctorEmail}\r\n              onChange={(e) => setDoctorEmail(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Pharmacy Name:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={pharmacyName}\r\n              onChange={(e) => setPharmacyName(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Email:</span>\r\n            <input\r\n              type=\"email\"\r\n              value={pharmacyEmail}\r\n              onChange={(e) => setPharmacyEmail(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n  \r\n          <label>\r\n            <span>Contains:</span>\r\n            <div className='ingredients'>\r\n              <input\r\n                type=\"text\"\r\n                value={newIngredient}\r\n                ref={ingredientInput}\r\n                onChange={(e) => setNewIngredient(e.target.value)}\r\n              />\r\n              <button onClick={handleAdd} className='add-btn'>\r\n                Add\r\n              </button>\r\n              <button onClick={handleRemove} className='delete-btn'>\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </label>\r\n  \r\n          <p>\r\n            Contains:{\" \"}\r\n            {contains.map((ingredient) => (\r\n              <em key={ingredient}>{ingredient}, </em>\r\n            ))}\r\n          </p>\r\n  \r\n          <label>\r\n            <span>Instructions:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={instructions}\r\n              onChange={(e) => setInstructions(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Storage:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={storage}\r\n              onChange={(e) => setStorage(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Side Effects:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={sideEffects}\r\n              onChange={(e) => setSideEffects(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Advice:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={warning}\r\n              onChange={(e) => setWarning(e.target.value)}\r\n              required\r\n            />\r\n          </label>\r\n          <button className='add-btn'>Add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n  \r\n  export default Edit","import { HashRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport { useTheme } from './hooks/useTheme';\n\n//components\nimport Navbar from './components/navbar/Navbar'\nimport ThemeSelector from './components/themeselector/ThemeSelector'\n\n// pages\nimport Home from './pages/home/Home'\nimport Search from './pages/search/Search'\nimport Create from './pages/create/Create'\nimport Medication from './pages/medication/Medication'\nimport Edit from './pages/edit/Edit'\n\n//styles\nimport './App.css';\n\nfunction App() {\n  const { mode } = useTheme()\n\n  return (\n    <div className={`App ${mode}`}>\n      <HashRouter>\n        <Navbar />\n        <ThemeSelector />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/search\">\n            <Search />\n          </Route>\n          <Route path=\"/create\">\n            <Create />\n          </Route>\n          <Route path=\"/medications/:id\">\n            <Medication />\n          </Route>\n          <Route path=\"/edit/:id\">\n            <Edit />\n          </Route>\n          <Route path=\"*\" >\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from './context/ThemeContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}